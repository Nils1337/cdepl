#!/usr/bin/env bash

source "app/zookeeper"
source "app/cons-bench"
ZK_PORT=2181

_cdepl_run_application()
{
    local cluster_total_nodes=$(cdepl_cluster_get_alloc_node_count)
    local server_count="$cluster_total_nodes"
    local client_count="1"
    local iteration_count="10000"
    local read_percentage="0.5"

	PARAMS=""
	while (( "$#" )); do
	case "$1" in
		--servers)
			server_count="$2"
			shift 2
			;;
		--clients)
			client_count="$2"
			shift 2
			;;
		--it-count)
			iteration_count="$2"
			shift 2
			;;
		--read-percentage)
			read_percentage="$2"
			shift 2
			;;
		--) # end argument parsing
			shift
			break
			;;
		-*|--*=) # unsupported flags
			echo "Error: Unsupported flag $1" >&2
			exit 1
			;;
		*) # preserve positional arguments
			PARAMS="$PARAMS $1"
			shift
			;;
	esac
	done

    if [[ $server_count -gt $cluster_total_nodes ]] ; then
        util_log_error "Server count higher than allocated nodes"
        return
    fi

    if [[ $client_count -gt $cluster_total_nodes ]] ; then
        util_log_error "Client count higher than allocated nodes"
        return
    fi

    # Initialize zookeeper deployment
	cdepl_app_zookeeper_init "$(cdepl_cluster_application_install_dir)/zookeeper" $ZK_PORT

	# Kill any still running instances from previous deployments
	cdepl_app_zookeeper_cleanup 0 $(($server_count - 1))

	# Start all nodes
	cdepl_app_zookeeper_start 0 $(($server_count - 1))

	cdepl_app_zookeeper_wait_started 0 $(($server_count - 1))

	local server_list=""

	for node in $(seq 0 $(($server_count - 1))); do
	    server_list="$(server_list)$(cdepl_cluster_resolve_node_to_ip $node):$ZK_PORT,"
	done

    cdepl_app_cons_bench_init "$(cdepl_cluster_application_install_dir)/cons-bench" "zookeeper" "$iteration_count" "$read_percentage" "$server_list"

	# Kill any still running instances from previous deployments
	cdepl_app_cons_bench_cleanup $((cluster_total_nodes - 1 - client_count)) $(($cluster_total_nodes - 1))

	# Start all nodes
	cdepl_app_cons_bench_start $((cluster_total_nodes - 1 - client_count)) $(($cluster_total_nodes - 1))
}