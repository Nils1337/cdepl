#!/bin/bash

# Example for (basic) dxram deployment

# Every function below can be in separate files as well
# which allows you to combine different cluster configrations 
# with application deployments
# just source them for your final deploy script

TOTAL_NODES=2

# Cluster type and user selected
CLUSTER_TYPE="hilbert"
CLUSTER_USER="stnot100"
CLUSTER_PROJECT_NAME="dxram"
CLUSTER_JOB_NAME="cdepl"

# Output path for log files, config files depending
# on the application deployed
OUT_PATH="/scratch_gs/${CLUSTER_USER}/test_cdepl"

# This is called before everything else. Setup your cluster
# environment by defining what type of cluster you want to
# deploy to and declare the resources you want to use 
# for allocations. Resource allocation depends on the 
# type of cluster you used. It might be ignored for some
# cluster types
cdepl_script_cluster_node_setup()
{
	# Init the cluster environment to deploy to

# TODO probably better to split by if condition here and have additional calls specific to that cluster type

	cdepl_cluster_init $CLUSTER_TYPE $CLUSTER_USER $CLUSTER_PROJECT_NAME $CLUSTER_JOB_NAME

	# Load application modules of apps you want to deploy
	#cdepl_cluster_app_load "zookeeper"
	#cdepl_cluster_app_load "dxram"

	# Alloc total number of nodes for this deployment
	cdepl_cluster_node_alloc $TOTAL_NODES

	# Walltime for your deployment, might be ignored depending
	# on cluster environment selected
	cdepl_cluster_walltime "00:10:00"

	# Set specific parameters for node 3
	cdepl_cluster_node_mem 0 1024
	cdepl_cluster_node_cpus 0 1
	cdepl_cluster_node_network 0 "ib"

	# Set our output path for log files and configurations 
	# for the applications deployed
	cdepl_deploy_out_path $OUT_PATH
}

# Do environment setup
# This is executed after all nodes are allocated with the
# resources specified. Resolve dependencies, copy files
# to the target nodes etc
cdepl_script_environment_setup()
{
#	for i in `seq 0 $((TOTAL_NODES - 1))`; do
#		cdepl_cluster_resolve_dependency $i "java" "1.8"
#		cdepl_cluster_resolve_dependency $i "gcc" "4.9"
#	done
	TODO=""
}

# Application deployment
# Called after environment setup
cdepl_script_deploy()
{
	echo "Hitting deploy"

	# We are done

	# Wait a moment before cleaning up
	sleep 5
}

# Execute any cleanup of the deployment
# Executed after application deployment
# If you want to keep all instaces running, just leave this empty
# Otherwise, kill the running instances and execute some other
# cleanup tasks
cdepl_script_cleanup()
{
	echo "Hitting cleanup"
}
