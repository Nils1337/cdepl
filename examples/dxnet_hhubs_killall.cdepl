#!/bin/bash

#
# Example to kill all (still) running dxnet instances on two nodes
#

TOTAL_NODES=2

# Cluster type and user selected
CLUSTER_TYPE="hhubs"
CLUSTER_USER="user"

# Output path for log files, config files depending
# on the application deployed
OUT_PATH="/home/${CLUSTER_USER}/scratch"

# DXRAM parameters
DXNET_PATH="/home/${CLUSTER_USER}/dxnet"

DXNET_PORT_START="22222"

cdepl_script_cluster_node_setup()
{
	# Set the log level to output debug info
	util_log_set_level "$UTIL_LOG_LEVEL_DEBUG"

	# Init the cluster environment to deploy to
	cdepl_cluster_init $CLUSTER_TYPE $CLUSTER_USER

	# Load application modules of apps you want to deploy
	cdepl_cluster_app_load "dxnet"

	# Alloc total number of nodes for this deployment
	cdepl_cluster_node_alloc $TOTAL_NODES

	# Reserve all nodes exclusive (all resources available)
	for i in $(seq 0 $((TOTAL_NODES - 1))); do
		cdepl_cluster_node_excl $i
	done

	# Set our output path for log files and configurations 
	# for the applications deployed
	cdepl_deploy_out_path $OUT_PATH
}

cdepl_script_environment_setup()
{
	local stub=""
}

cdepl_script_deploy()
{
	# Initialize dxnet deployment
	cdepl_app_dxnet_init $DXNET_PATH
	
	# Kill any still running instances from previous deployments
	for i in $(seq 0 $((TOTAL_NODES - 1))); do
		cdepl_app_dxnet_node_cleanup $i
	done
}

cdepl_script_cleanup()
{
	local stub=""
}
