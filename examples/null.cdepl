#!/bin/bash

##
# This file is a bare skeleton for any deploy scripts you implement. The 
# functions included are required for the framework to execute deployment
# of your application.
#
# Every function below can be in separate files as well which allows you to 
# combine different cluster configrations with application deployments. Just
# source them for your final deploy script.
##

##
# Process optional argument that are passed to this script when invoked from
# the command line using the cdepl script.
#
# $arg_1 First argument from command line invocation (if provided)
# $arg_2 Second argument from command line invocation (if provided)
# $...
##
cdepl_script_process_cmd_args()
{
	local arg_1="$1"
	local arg_2="$2"
	# ...
}

##
# Cluster/node setup is the first phase during deployment. 
#
# Setup your cluster environment by defining what type of cluster you want to
# deploy to and declare the resources you want to use for allocations. 
# Resource allocation might depend on the type of cluster you use.
#
# If you want to deploy on multiple cluster types, you might have to differ them
# if you have different amounts of resources available. Otherwise, the setup
# can be used on different cluster types without changes.
##
cdepl_script_cluster_node_setup()
{
    local stub=""
}

##
# Third phase, application deployment
#
# Now that the environment is set up, deploy your application and execute your
# benchmarks, tests etc.
##
cdepl_script_deploy()
{
	local stub=""
}

##
# Fourth phase, deployment cleanup (might be optional)
#
# Cleanup the cluster after deployment if you have no intention of leaving the
# deployed application(s) running forever.
#
# Note: This is also called if cdepl_cluster_cleanup_on_error is enabled and
# cdepl failed to execute any deployment step.
##
cdepl_script_cleanup()
{
	local stub=""
}
