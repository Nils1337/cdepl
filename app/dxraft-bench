#!/bin/bash

DXRAFT_DIR=""

cdepl_app_dxraft_bench_init() {
    DXRAFT_DIR=$1

    util_log "[dxraft_bench] Initialized: $DXRAFT_DIR"
}

cdepl_app_dxraft_bench_start_node()
{
	local node_range_start=$1
	local node_range_end=$2

	if [ "$node_range_end" ]; then
		local pids=""

		for node in $(seq "$node_range_start" "$node_range_end"); do
			if [ "$node" = "$node_range_start" ] ; then
			    __cdepl_app_dxraft_bench_start_node "$node" &
			else
			    __cdepl_app_dxraft_bench_start_node "$node" &
			fi
			pids="$pids $!"
		done

		wait $pids
	else
		__cdepl_app_dxraft_bench_start_node "$node_range_start" false
	fi
}

cdepl_app_dxraft_bench_node_cleanup()
{
	local node_range_start=$1
	local node_range_end=$2

	if [ "$node_range_end" ]; then
		local pids=""

		for node in $(seq "$node_range_start" "$node_range_end"); do
			__cdepl_app_dxraft_bench_cleanup "$node" &
			pids="$pids $!"
		done

		wait $pids
	else
		__cdepl_app_dxraft_bench_cleanup "$node_range_start"
	fi
}

cdepl_app_dxraft_bench_node_wait_finished()
{
	local node_range_start=$1
	local node_range_end=$2

	if [ "$node_range_end" ]; then
		local pids=""

		for node in $(seq "$node_range_start" "$node_range_end"); do
			util_log "cleaning up node $node"
			__cdepl_app_dxraft_bench_wait_finished "$node" &
			pids="$pids $!"
		done

		wait $pids
	else
		__cdepl_app_dxraft_bench_wait_finished "$node_range_start"
	fi
}

__cdepl_app_dxraft_bench_start_node()
{
    local node=$1

    local cmd="nohup $DXRAFT_DIR/bin/dxraft-bench.sh &"

	util_log "[$node][dxraft_bench] Starting dxraft: cmd=$cmd"

    cdepl_cluster_node_cmd "$node" "$cmd"
}

__cdepl_app_dxraft_bench_get_instances_pids()
{
	local node=$1

	cdepl_cluster_node_cmd "$node" "pgrep -f 'java.*-cp.*dxraft-0.1.jar'"
}

__cdepl_app_dxraft_bench_wait_finished()
{
    local node=$1

    local pid=$(__cdepl_app_dxraft_bench_get_instances_pids "$node")

    if [ "$pid" ]; then
    	cdepl_cluster_node_cmd "$node" "wait $pid"
    	util_log "[$node][dxraft_bench] Benchmark finished"
    fi
}