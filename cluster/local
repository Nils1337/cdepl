#!/bin/bash

LOCAL_TOTAL_NODES=""

cdepl_cluster_node_alloc()
{
	local num_nodes=$1

	LOCAL_TOTAL_NODES="$num_nodes"
}

cdepl_cluster_walltime()
{
	local walltime=$1

	# Not supporting walltime, ignore
}

cdepl_cluster_node_excl()
{
	local node=$1

	# Nodes are always exclusive, ignore
}

cdepl_cluster_node_cpus()
{
	local node=$1
	local cpus=$2

	# Not supporting cpu resource allocation
}

cdepl_cluster_node_mem()
{
	local node=$1
	local mem=$2

	# Not supporting memory resource allocation
}

cdepl_cluster_node_network()
{
	local node=$1
	local net=$2

	# Not supporting network resource allocation
}

cdepl_cluster_resolve_dependency()
{
	local node=$1
	local cmd=$2
	local version=$3

	util_log_debug "[local][$node] Resolve dependency: $cmd/$version"

	command -v $cmd > /dev/null 2>&1

	if [ "$?" != "0" ]; then
		util_log_error_and_exit "[local][$node] Dependency $cmd/$version does not exist"
	fi
}

# if non resolveable, returns empty string
cdepl_cluster_resolve_hostname_to_ip()
{
	local hostname=$1

	local ip=""

	if [ "$hostname" = "localhost" ]; then
		ip="127.0.0.1"
	else
		ip="$(host $hostname | cut -d ' ' -f 4 | grep -E '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}')"

		if [ "$ip" = "" ]; then
			ip="$(dig $hostname | grep -E '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' | awk '{ if (\$3 == "IN" && \$4 == "A") print \$5 }')"
		fi
	fi

	echo $ip
}

# if non resolveable, returns empty string
cdepl_cluster_resolve_node_to_ip()
{
	local node=$1

	# Always localhost
	echo "127.0.0.1"
}

cdepl_cluster_login_cmd()
{
	local cmd="$1"

	eval "$cmd"
}

cdepl_cluster_node_cmd()
{
	local node=$1
	local cmd="$2"

	eval "$cmd"
}

cdepl_cluster_get_alloc_node_count()
{
	echo "$LOCAL_TOTAL_NODES"
}

cdepl_cluster_node_resolve_node_to_hostname()
{
	local node=$1

	echo "localhost"
}

####################################
# "private" callback methods that should not be called by the user

# "constructor"
_cdepl_cluster_on_init()
{
	local cluster_user=$1

	# No need to store user on localhost

	util_log_debug "[local] on_init"
}

_cdepl_cluster_on_node_setup_finish()
{
	util_log_debug "[local] on_node_setup_finish"
}

_cdepl_cluster_on_env_setup_finish()
{
	util_log_debug "[local] on_env_setup_finish"
}

_cdepl_cluster_before_deploy()
{
	util_log_debug "[local] before_deploy"
}

_cdepl_cluster_after_deploy()
{
	util_log_debug "[local] after_deploy"
}

_cdepl_cluster_before_cleanup()
{
	util_log_debug "[local] before_cleanup"
}

_cdepl_cluster_after_cleanup()
{
	util_log_debug "[local] after_cleanup"
}